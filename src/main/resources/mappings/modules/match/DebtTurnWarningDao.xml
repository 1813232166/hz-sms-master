<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hzdjr.hzwd.modules.match.dao.DebtTurnWarningDao">
    
	<sql id="debtTurnWarningColumns">
		a.id AS "id",
		a.status AS "status",
		a.asset_category AS "assetCategory",
		a.asset_type AS "assetType",
		a.product_id AS "productId",
		a.raise_term AS "raiseTerm",
		a.amount AS "amount",
		a.residue_amount AS "residueAmount",
		a.borrow_type AS "borrowType",
		a.rate AS "rate",
		a.nper AS "nper",
		a.urgent AS "urgent",
		a.stick_top AS "stickTop",
		a.entry_time AS "entryTime",
		a.matched_time AS "matchedTime",
		a.freeze AS "freeze",
		a.freeze_time AS "freezeTime",
		a.thaw_time AS "thawTime",
		a.source_asset_id AS "sourceAssetId",
		a.original_asset_id AS "originalAssetId",
		a.matched_id AS "matchedId",
		a.custom_weight AS "customWeight",
		a.weight AS "weight",
		a.borrow_id AS "borrowId",
		a.user_id AS "user.id",
		a.asset_code AS "assetCode",
		a.matching_pen_number AS "matchingPenNumber",
		a.asset_source AS "assetSource",
		DATEDIFF(now(),a.entry_time)+1 AS "warningDay"
	</sql>
	
    
	
	<select id="findList" resultType="DebtTurnWarning">
		SELECT 
			<include refid="debtTurnWarningColumns"/>,b.realName  AS "realName",c.idcard AS "idCard"
		FROM t_asset a
		INNER JOIN  t_user b  on a.user_id=b.id
		INNER JOIN t_user_detail c on b.id=c.userId
		<where>
			DATEDIFF(now(),a.entry_time) >1
			AND asset_type='2'
			
			
			 <if test="assetCode != null and assetCode != ''">
				AND a.asset_code = #{assetCode}
			</if>
			
			<if test="realName != null and realName != ''">
				AND b.realName like CONCAT('%',#{realName},'%')
			</if>
			
			<if test="idCard != null and idCard != ''">
				AND c.idcard = #{idCard}
			</if>
			
			<if test="productId != null and productId != ''">
				AND a.product_id = #{productId}
			</if>
			
			<if test="status != null and status != ''">
				AND a.status = #{status}
			</if>
			
			<if test="assetSource != null and assetSource != ''">
				AND a.asset_source = #{assetSource}
			</if>
			
			<if test="assetCategory != null and assetCategory != ''">
				AND a.asset_category = #{assetCategory}
			</if>
			
			<if test="stickTop != null and stickTop != ''">
				AND a.stick_top = #{stickTop}
			</if>
			
			<if test="weightLow != null and weightLow != ''">
                AND a.weight &gt;= #{weightLow}
            </if>
            <if test="weightHigh != null and weightHigh != ''">
                AND a.weight &lt;= #{weightHigh}
            </if>
            	
			<if test="warningDayLow != null and warningDayLow != ''">
                AND DATEDIFF(now(),a.entry_time) &gt;= #{warningDayLow}
            </if>
            <if test="warningDayHigh != null and warningDayHigh != ''">
                AND DATEDIFF(now(),a.entry_time) &lt;= #{warningDayHigh}
            </if>
            
            
		</where>
		ORDER BY a.weight DESC
	</select>
	
	
	<insert id="insert">
		INSERT INTO t_asset(
			id,
			status,
			asset_category,
			asset_type,
			product_id,
			raise_term,
			amount,
			residue_amount,
			borrow_type,
			rate,
			nper,
			urgent,
			stick_top,
			entry_time,
			matched_time,
			freeze,
			freeze_time,
			thaw_time,
			source_asset_id,
			original_asset_id,
			matched_id,
			custom_weight,
			weight,
			borrow_id,
			user_id,
			asset_code,
			matching_pen_number
		) VALUES (
			#{id},
			#{status},
			#{assetCategory},
			#{assetType},
			#{productId},
			#{raiseTerm},
			#{amount},
			#{residueAmount},
			#{borrowType},
			#{rate},
			#{nper},
			#{urgent},
			#{stickTop},
			#{entryTime},
			#{matchedTime},
			#{freeze},
			#{freezeTime},
			#{thawTime},
			#{sourceAssetId},
			#{originalAssetId},
			#{matchedId},
			#{customWeight},
			#{weight},
			#{borrowId},
			#{user.id},
			#{assetCode},
			#{matchingPenNumber}
		)
	</insert>
	
	<update id="update">
		UPDATE t_asset SET 	
			status = #{status},
			asset_category = #{assetCategory},
			asset_type = #{assetType},
			product_id = #{productId},
			raise_term = #{raiseTerm},
			amount = #{amount},
			residue_amount = #{residueAmount},
			borrow_type = #{borrowType},
			rate = #{rate},
			nper = #{nper},
			urgent = #{urgent},
			stick_top = #{stickTop},
			entry_time = #{entryTime},
			matched_time = #{matchedTime},
			freeze = #{freeze},
			freeze_time = #{freezeTime},
			thaw_time = #{thawTime},
			source_asset_id = #{sourceAssetId},
			original_asset_id = #{originalAssetId},
			matched_id = #{matchedId},
			custom_weight = #{customWeight},
			weight = #{weight},
			borrow_id = #{borrowId},
			user_id = #{user.id},
			asset_code = #{assetCode},
			matching_pen_number = #{matchingPenNumber}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		DELETE FROM t_asset
		WHERE id = #{id}
	</update>
	
	<select id="findWarningAsset" resultType="map"  parameterType="Capital">
		SELECT 
		sum(a.amount) AS amountCount
		FROM t_asset a
		INNER JOIN  t_user b  on a.user_id=b.id
		INNER JOIN t_user_detail c on b.id=c.userId
		<where>
			DATEDIFF(now(),a.entry_time) >3
			
			AND asset_type='2'
			
			 <if test="assetCode != null and assetCode != ''">
				AND a.asset_code = #{assetCode}
			</if>
			
			<if test="realName != null and realName != ''">
				AND b.realName like CONCAT('%',#{realName},'%')
			</if>
			
			<if test="idCard != null and idCard != ''">
				AND c.idcard = #{idCard}
			</if>
			
			<if test="productId != null and productId != ''">
				AND a.product_id = #{productId}
			</if>
			
			<if test="status != null and status != ''">
				AND a.status = #{status}
			</if>
			
			<if test="assetSource != null and assetSource != ''">
				AND a.asset_source = #{assetSource}
			</if>
			
			<if test="assetCategory != null and assetCategory != ''">
				AND a.asset_category = #{assetCategory}
			</if>
			
			<if test="stickTop != null and stickTop != ''">
				AND a.stick_top = #{stickTop}
			</if>
			
			<if test="weightLow != null and weightLow != ''">
                AND a.weight &gt;= #{weightLow}
            </if>
            <if test="weightHigh != null and weightHigh != ''">
                AND a.weight &lt;= #{weightHigh}
            </if>
            	
			<if test="warningDayLow != null and warningDayLow != ''">
                AND DATEDIFF(now(),a.entry_time) &gt;= #{warningDayLow}
            </if>
            <if test="warningDayHigh != null and warningDayHigh != ''">
                AND DATEDIFF(now(),a.entry_time) &lt;= #{warningDayHigh}
            </if>
            
            
		</where>
	</select>
	
	
</mapper>